{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  console.log('ready!');\n}, false);\nvar element = document.getElementById('selector');\nvar maskOptions = {\n  mask: '+{7}(000)000-00-00'\n};\nvar mask = IMask(element, maskOptions);\nvar currentTab = 0; // Current tab is set to be the first tab (0)\n\nvar currentTabGroup = 0;\nvar currentTabGroupThanks = 0;\nvar currentTabIndex = 0;\nvar tabsCounter = document.querySelectorAll('.tab-group')[currentTabGroup].querySelectorAll('.tab').length;\nshowTab(currentTab); // Display the current tab\n// show .form-header \n\nfunction showHeader() {\n  var headers = document.querySelectorAll('.form-header');\n\n  if (document.querySelectorAll('.tab')[currentTab].matches('.thanks')) {\n    currentTabGroupThanks++;\n\n    _toConsumableArray(headers).map(function (e) {\n      return e.classList.remove('show');\n    });\n\n    return;\n  }\n\n  _toConsumableArray(headers).map(function (e) {\n    return e.classList.remove('show');\n  });\n\n  if (currentTabGroup === 0) {\n    if (currentTab === 0) {\n      headers[0].classList.add('show');\n    } else {\n      headers[currentTab - currentTabGroupThanks].classList.add('show');\n    }\n  } else {\n    headers[currentTab - currentTabGroupThanks].classList.add('show');\n  }\n} // progress line\n\n\nfunction progress() {\n  var progress = document.querySelector('.progress');\n\n  if (progress !== null) {\n    // Progress Line\n    var currentTabNumber = currentTab - currentTabGroupThanks + 1;\n    var currentProgress = 100 / document.querySelectorAll(\".tab:not(.thanks)\").length * currentTabNumber;\n    progress.querySelector('.progress-done').style.width = currentProgress + \"%\"; // Counter\n\n    progress.querySelector('.total-pages').textContent = document.querySelectorAll(\".tab:not(.thanks)\").length; // total pages\n\n    progress.querySelector('.current-page').textContent = currentTabNumber; // current page\n  }\n}\n\nfunction showTab(n) {\n  console.log(\"Текущая стр: \" + (currentTab + 1));\n  progress();\n  showHeader();\n\n  if (document.querySelector(\".tab\") !== null) {\n    // This function will display the specified tab of the form ...\n    var x = document.querySelectorAll(\".tab\");\n    x[n].classList.add('active'); // ... and fix the Previous/Next buttons:\n\n    if (currentTab === 0) {\n      document.querySelector('#nextBtn').textContent = \"Начнем!\";\n    }\n\n    if (tabsCounter === document.querySelectorAll('.tab-group')[currentTabGroup].querySelectorAll('.tab').length || document.querySelectorAll('.tab')[currentTab].matches('.thanks')) {\n      document.querySelector('#prevBtn').classList.add('hide');\n      document.querySelector('#prevBtn').classList.remove('show');\n    } else {\n      document.querySelector('#prevBtn').classList.add('show');\n      document.querySelector('#prevBtn').classList.remove('hide');\n      document.querySelector('#nextBtn').textContent = \"Дальше\";\n    }\n\n    if (n + 1 === x.length) {\n      document.querySelector(\"#nextBtn\").innerHTML = \"Готово\";\n    }\n  }\n}\n\nfunction nextPrev(n) {\n  // This function will figure out which tab to display\n  var x = document.querySelectorAll(\".tab\"); // Exit the function if any field in the current tab is invalid:\n\n  if (n == 1 && !validateForm()) return false; // Hide the current tab:\n\n  x[currentTab].classList.remove('active'); // Increase or decrease the current tab by 1:\n\n  currentTab += n;\n  tabsCounter += n > 0 ? -1 : 1;\n\n  if (tabsCounter <= 0) {\n    nextGroup();\n  } // if you have reached the end of the form... :\n\n\n  if (currentTab >= x.length) {\n    return false;\n  }\n\n  if (document.querySelectorAll('.tab')[currentTab].matches('.thanks')) {\n    hideFormUI();\n  } else {\n    showFormUI();\n  } // Otherwise, display the correct tab:\n\n\n  showTab(currentTab);\n}\n\nfunction nextGroup() {\n  currentTabGroup++; // обнуляем счетчик табов в текущем tab group\n\n  tabsCounter = document.querySelectorAll('.tab-group')[currentTabGroup].querySelectorAll('.tab').length;\n  document.querySelector('#prevBtn').classList.add('hide');\n\n  _toConsumableArray(document.querySelectorAll('.tab-group')).map(function (e) {\n    return e.classList.remove('active');\n  });\n\n  document.querySelectorAll('.tab-group')[currentTabGroup].classList.add('active');\n}\n\nfunction hideFormUI() {\n  var headers = document.querySelectorAll('.form-header');\n  document.querySelector('.panel-footer').classList.add('hide');\n  document.querySelector('.progress').classList.add('hide');\n\n  _toConsumableArray(headers).map(function (e) {\n    return e.classList.remove('show');\n  });\n}\n\nfunction showFormUI() {\n  var headers = document.querySelectorAll('.form-header');\n  document.querySelector('.panel-footer').classList.remove('hide');\n  document.querySelector('.progress').classList.remove('hide');\n  headers[0].classList.add('show');\n} // Валидация\n\n\nfunction validateForm() {\n  // This function deals with validation of the form fields\n  var requireds,\n      tab,\n      required,\n      valid = true;\n  tab = document.querySelectorAll(\".tab\")[currentTab];\n  requireds = tab.querySelectorAll(\".required\");\n\n  for (var i = 0; i < requireds.length; i++) {\n    if (requireds[i].matches('.input')) {\n      // если есть класс .input\n      if (requireds[i].querySelectorAll('input[type=\"text\"]').length > 0) {\n        // значит ищем внутри все инпуты\n        var inputs = requireds[i].querySelectorAll('input[type=\"text\"]');\n\n        for (var j = 0; j < inputs.length; j++) {\n          if (inputs[j].value == \"\") {\n            inputs[j].closest('.input').className += \" invalid\";\n            valid = false;\n          }\n        }\n      }\n    } // для радио групп\n\n\n    if (requireds[i].matches('.radio-group')) {\n      if (!requireds[i].querySelector('input[type=\"radio\"]:checked')) {\n        requireds[i].classList.add('invalid');\n        valid = false;\n      }\n    } // для чекбокс групп\n\n\n    if (requireds[i].matches('.checkbox-group')) {\n      if (!requireds[i].querySelector('input[type=\"checkbox\"]:checked')) {\n        requireds[i].classList.add('invalid');\n        valid = false;\n      }\n    } // для текстареа групп\n\n\n    if (requireds[i].matches('.textarea')) {\n      // если есть класс .input\n      if (requireds[i].querySelectorAll('textarea').length > 0) {\n        // значит ищем внутри все инпуты\n        var _inputs = requireds[i].querySelectorAll('textarea');\n\n        for (var j = 0; j < _inputs.length; j++) {\n          if (_inputs[j].value == \"\") {\n            _inputs[j].closest('.textarea').className += \" invalid\";\n            valid = false;\n          }\n        }\n      }\n    }\n  }\n\n  return valid; // return the valid status\n} // Убираем .invalid если инпут начали заполнять / выбран хоть 1 чек/радио-бокс\n// для инпутов\n\n\nfor (var i = 0; i < document.querySelectorAll('.required input[type=\"text\"]').length; i++) {\n  document.querySelectorAll('.required input[type=\"text\"]')[i].addEventListener(\"input\", function (e) {\n    e.target.closest('.required').classList.remove('invalid');\n  });\n} // для радио\n\n\nfor (var i = 0; i < document.querySelectorAll('.required input[type=\"radio\"]').length; i++) {\n  document.querySelectorAll('.required input[type=\"radio\"]')[i].addEventListener(\"input\", function (e) {\n    e.target.closest('.required').classList.remove('invalid');\n  });\n} // для чекбоксов\n\n\nfor (var i = 0; i < document.querySelectorAll('.required input[type=\"checkbox\"]').length; i++) {\n  document.querySelectorAll('.required input[type=\"checkbox\"]')[i].addEventListener(\"input\", function (e) {\n    e.target.closest('.required').classList.remove('invalid');\n  });\n} // для textarea\n\n\nfor (var i = 0; i < document.querySelectorAll('.required textarea').length; i++) {\n  document.querySelectorAll('.required textarea')[i].addEventListener(\"input\", function (e) {\n    e.target.closest('.required').classList.remove('invalid');\n  });\n}"],"file":"app.js"}